plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3' apply false
	id 'io.spring.dependency-management' version '1.1.7' apply false
}

group = 'club.cmc.limber'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	set('springModulithVersion', "1.4.1")
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'

	group = rootProject.group
	version = rootProject.version

	repositories {
		mavenCentral()
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:3.5.3"
			mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
		}
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		implementation 'org.slf4j:slf4j-api'
	}

	tasks.withType(Test).configureEach {
		useJUnitPlatform()
	}
}

project(':core') {
	apply plugin: 'org.springframework.boot'

	bootJar {
		archiveFileName = 'app.jar'
		mainClass = 'club.cmc.limber.LimberApplication'
	}

	dependencies {
		implementation project(':common')
		implementation project(':global')

		implementation project(':user')
		implementation project(':oauth')
//		implementation project(':admin')
//		implementation project(':application')
//		implementation project(':notification')
//		implementation project(':score')
//		implementation project(':school')

		implementation 'org.springframework.boot:spring-boot-starter-web'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}

project(':common') {
	apply plugin: 'java-library'

	dependencies {
		api 'org.springframework:spring-context'
		api 'org.springframework:spring-context-support'
		api 'org.springframework.boot:spring-boot-starter-web'
		api 'org.springframework.boot:spring-boot-starter-webflux'
		api 'com.fasterxml.jackson.core:jackson-databind'
	}
}

project(':global') {
	apply plugin: 'java-library'

	dependencies {
		api 'org.springframework:spring-context'
		api 'org.springframework:spring-context-support'
		api 'org.springframework.boot:spring-boot-starter-web'
		api 'org.springframework.boot:spring-boot-starter-webflux'
		api 'com.fasterxml.jackson.core:jackson-databind'
		api 'jakarta.validation:jakarta.validation-api'

		// JPA 및 JDBC 관련 의존성
		api 'org.springframework.boot:spring-boot-starter-data-jpa'     // EntityManager 등 포함
		api 'org.springframework.boot:spring-boot-starter-jdbc'         // AbstractRoutingDataSource 포함

		// PostgreSQL JDBC 드라이버
		runtimeOnly 'org.postgresql:postgresql'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}

project(':user') {
	dependencies {
		implementation project(':common')
		implementation project(':global')

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
	}
}


project(':oauth') {
	dependencies {
		implementation project(':common')
		implementation project(':global')

		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
	}
}
